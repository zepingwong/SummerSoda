(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{659:function(s,e,t){"use strict";t.r(e);var i=t(2),v=Object(i.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("Redis 是完全开源的，遵守 BSD 协议，是一个高性能的 key-value 数据库。")]),s._v(" "),e("p",[s._v("Redis 与其他 key - value 缓存产品有以下三个特点：")]),s._v(" "),e("ul",[e("li",[s._v("Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。")]),s._v(" "),e("li",[s._v("Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。")]),s._v(" "),e("li",[s._v("Redis支持数据的备份，即master-slave模式的数据备份。")])]),s._v(" "),e("h2",{attrs:{id:"优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[s._v("#")]),s._v(" "),e("em",[e("strong",[s._v("优势")])])]),s._v(" "),e("ul",[e("li",[s._v("性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。")]),s._v(" "),e("li",[s._v("丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。")]),s._v(" "),e("li",[s._v("原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。")]),s._v(" "),e("li",[s._v("丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。")])]),s._v(" "),e("h2",{attrs:{id:"区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[s._v("#")]),s._v(" "),e("em",[e("strong",[s._v("区别")])])]),s._v(" "),e("ul",[e("li",[s._v("Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。")]),s._v(" "),e("li",[s._v("Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);